version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: shared-postgres
    environment:
      POSTGRES_PASSWORD: root_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgre/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.5
    container_name: keycloak-server
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/management-realm.json:/opt/keycloak/data/import/management-realm.json
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  microservices-network:
    name: microservices-network
    driver: bridge
